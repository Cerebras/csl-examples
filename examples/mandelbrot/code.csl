const rectangle_size = 4;

const image_height = 16;
const image_width = 16;
const max_iters = 8;

const x_lo: f32 = -2.0;
const x_hi: f32 = 1.0;
const y_lo: f32 = -1.5;
const y_hi: f32 = 1.5;

const rows_per_pe = image_height / rectangle_size;

const routing_colors = [2]color { @get_color(2), @get_color(3) };

layout {
  @set_rectangle(rectangle_size, rectangle_size);

  for (@range(u32, rectangle_size)) |y| {

    for (@range(u32, rectangle_size)) |x| {
      const ic = routing_colors[x % 2];
      const oc = routing_colors[(x + 1) % 2];

      const params = .{ .pe_x = x,
                        .pe_y = y,
                        .in_color = ic,
                        .out_color = oc,
                        .image_height = image_height,
                        .image_width = image_width,
                        .max_iters = max_iters,
                        .x_lo = x_lo,
                        .x_hi = x_hi,
                        .y_lo = y_lo,
                        .y_hi = y_hi,
                        .rows_per_pe = rows_per_pe };

      if (x == 0) {
        @set_tile_code(x, y, "left.csl", params);
      } else {
        @set_tile_code(x, y, "middle.csl", params);
      }

      const in_route = .{.rx=.{WEST}, .tx=.{RAMP}};
      @set_color_config(x, y, ic, .{ .routes = in_route });
      const out_route = .{.rx=.{RAMP}, .tx=.{EAST}};
      @set_color_config(x, y, oc, .{ .routes = out_route });
    }
  }
}
