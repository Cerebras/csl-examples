// Copyright 2022 Cerebras Systems.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This does y = Ax + b (A is 32x16) on a 4x4 rectangle of PEs.

// Program uses 4x4 rectangle of PEs
const kernel_rows : u16 = 4; // Height of kernel
const kernel_cols : u16 = 4; // Width of kernel

// Global matrix dimensions
const matrix_rows : u16 = 32; // Height of matrix
const matrix_cols : u16 = 16; // Width of matrix

// Local matrix dimensions
const Nt : u16 = matrix_rows / kernel_rows; // Number of rows per PE
const Mt : u16 = matrix_cols / kernel_cols; // Number of columns per PE

const c2d = @import_module("<collectives_2d/params>");

layout {
  @set_rectangle(kernel_cols, kernel_rows);

  var Px: u16 = 0;
  while (Px < kernel_cols) : (Px += 1) {
    var Py: u16 = 0;
    while (Py < kernel_rows) : (Py += 1) {
      const params = c2d.get_params(Px, Py, .{
        .x_colors = .{ @get_color(0), @get_color(1), @get_color(2), @get_color(3) },
        .y_colors = .{ @get_color(4), @get_color(5), @get_color(6), @get_color(7) },
      });
      @set_tile_code(Px, Py, "pe.csl", .{ .c2d_params = params,
        .Nt = Nt, .Mt = Mt });
    }
  }
}
