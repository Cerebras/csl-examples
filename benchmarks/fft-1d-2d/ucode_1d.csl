// Copyright 2025 Cerebras Systems.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

param memcpyParams: comptime_struct;

// Task IDs
const EXIT: local_task_id = @get_local_task_id(10);

const sys_mod = @import_module( "<memcpy/memcpy>", memcpyParams);

// Problem size
param N: i16;
const ELEM_SIZE: i16 = 2;
param FP: i16;
param tensor_type: type;

// Import the code in the file `fft.csl` as the module `mod`, and
// instantiate the module's `N` parameter.

var X = @zeros([N*ELEM_SIZE]tensor_type);
var f_twiddle = @zeros([N]tensor_type);

var ptr_X: [*]tensor_type = &X;
var ptr_f_twiddle: [*]tensor_type = &f_twiddle;

const mod = @import_module("fft.csl", .{ .N = N, .ARRAY_LEN = N*ELEM_SIZE, .X=&X, .FP=FP, .tensor_type=tensor_type});

fn f_fft() void {
  mod.fft(&f_twiddle);
  @activate(EXIT);
}

fn f_ifft() void {
  mod.ifft(&f_twiddle);
  @activate(EXIT);
}

task f_exit() void {
  // the user must unblock cmd color for every PE
  sys_mod.unblock_cmd_stream();
}
comptime {
  @bind_local_task(f_exit, EXIT);
  @export_symbol(ptr_X, "X");
  @export_symbol(ptr_f_twiddle, "f_twiddle");
  @export_symbol(f_fft);
  @export_symbol(f_ifft);
}
