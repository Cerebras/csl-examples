const start: color = @get_color(0);

const colorValue = 1;
const channel: color = @get_color(colorValue);

const out: color = @get_color(2);

layout {
  @set_rectangle(3, 3);

  // Out of the nine PEs, the PE in the center (PE #1,1) will send four
  // control wavelets to the PE's four adjacent neighbors.  These four
  // adjacent numbers are programmed to receive the control wavelets, whereas
  // all other PEs (i.e. the PEs at the corners of the rectangle) are
  // programmed to contain no instructions or routes.

  @set_tile_code(1, 1, "send.csl", .{
    .mainColor = start, .txColor = channel, .colorValue = colorValue
  });

  @set_tile_code(1, 0, "recv.csl", .{
    // Make this PE send the final message back to the host signaling completion
    .rxColor = channel, .inDir = SOUTH, .fin = true, .outColor = out,
  });

  @set_tile_code(0, 1, "recv.csl", .{
    .rxColor = channel, .inDir = EAST, .fin = false, .outColor = out,
  });

  @set_tile_code(2, 1, "recv.csl", .{
    .rxColor = channel, .inDir = WEST, .fin = false, .outColor = out,
  });

  @set_tile_code(1, 2, "recv.csl", .{
    .rxColor = channel, .inDir = NORTH, .fin = false, .outColor = out,
  });

  @set_tile_code(0, 0, "empty.csl");
  @set_tile_code(2, 0, "empty.csl");
  @set_tile_code(0, 2, "empty.csl");
  @set_tile_code(2, 2, "empty.csl");
}
