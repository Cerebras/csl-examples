// Copyright 2022 Cerebras Systems.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Not a complete program; the top-level source file is code.csl.

param rxColor: color;
param outColor: color;

param fin: bool;
param inDir: direction;

const dsd = @get_dsd(fabout_dsd, .{.fabric_color = outColor, .extent = 1});

var global:u16 = 0;

task rxTask(data: u16) void {
  global = data;

  if (fin) {
    @mov16(dsd, 0);
  }
}

comptime {
  @bind_task(rxTask, rxColor);
  @set_local_color_config(rxColor, .{ .rx = .{ inDir }, .tx = .{ RAMP } });

  const outRoute = .{ .rx = .{ RAMP }, .tx = .{ NORTH } };
  @set_local_color_config(outColor, outRoute);
}
