// Copyright 2023 Cerebras Systems.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

param memcpy_params: comptime_struct;

// Colors
param output_color:     color;

// Task IDs
param main_task_id:        data_task_id;    // data task recieves data along main_color
param send_result_task_id: control_task_id; // sentinel tells PE to send result to host

// ----------
// Every PE needs to import memcpy module otherwise the I/O cannot
// propagate the data to the destination.

// memcpy module reserves input queue 0 and output queue 0
const sys_mod = @import_module( "<memcpy/memcpy>", memcpy_params);
// ----------

var result: f16 = 0.0;

const out_dsd = @get_dsd(fabout_dsd, .{.fabric_color = output_color, .extent = 1});

task main_task(data: f16) void {
  result = result + data;
}

task send_result() void {
  @fmovh(out_dsd, result);
}

comptime {
  @bind_data_task(main_task, main_task_id);
  @bind_control_task(send_result, send_result_task_id);
}
