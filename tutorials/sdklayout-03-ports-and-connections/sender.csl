// Copyright 2025 Cerebras Systems.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

param size: u16;
param tx: color;

const out_q = @get_output_queue(0);

export var data = [10]u16{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

const data_dsd = @get_dsd(mem1d_dsd, .{.tensor_access = |i|{size} -> data[i]});

const output = @get_dsd(fabout_dsd, .{.extent = size,
                                      .fabric_color = tx,
                                      .output_queue = out_q});

const main_id = @get_local_task_id(8);
task main() void {
  @mov16(output, data_dsd, .{.async = true});
}

comptime {
  @bind_local_task(main, main_id);
  @activate(main_id);

  if (@is_arch("wse3")) {
    @initialize_queue(out_q, .{.color = tx});
  }
}
