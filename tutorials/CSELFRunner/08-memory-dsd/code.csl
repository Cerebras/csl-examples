// Copyright 2022 Cerebras Systems.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

const main_color: color = @get_color(8);
const output_color: color = @get_color(1);

var dst = @zeros([5]f16);
const src0 = [5]f16 {10.0, 20.0, 30.0, 40.0, 50.0};
const src1 = [5]f16 {11.0, 22.0, 33.0, 44.0, 55.0};

const dstDsd = @get_dsd(mem1d_dsd, .{ .tensor_access = |i|{5} -> dst[i] });
const src0Dsd = @get_dsd(mem1d_dsd, .{ .tensor_access = |i|{5} -> src0[i] });
const src1Dsd = @get_dsd(mem1d_dsd, .{ .tensor_access = |i|{5} -> src1[i] });

const fabDsd = @get_dsd(fabout_dsd, .{.fabric_color = output_color, .extent = 1});

task main_task() void {
  @faddh(dstDsd, src0Dsd, src1Dsd);
  @fmovh(fabDsd, dstDsd);
}

comptime {
  @activate(main_color);
  @bind_task(main_task, main_color);
}

layout {
  @set_rectangle(1, 1);
  @set_tile_code(0, 0, "code.csl");

  // Configure the wavelet route for the output message
  const output_route = .{ .rx = .{ RAMP }, .tx = .{ EAST } };
  @set_color_config(0, 0, output_color, .{ .routes = output_route });
}
