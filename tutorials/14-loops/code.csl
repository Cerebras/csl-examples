// Copyright 2022 Cerebras Systems.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// resources to route the data between the host and the device.
//

// color map
//
// color  var    color  var              color  var              color  var
//   0 H2D          9                      18                      27   reserved (memcpy)
//   1 D2H         10                      19                      28   reserved (memcpy)
//   2 LAUNCH      11                      20                      29   reserved
//   3             12                      21    reserved (memcpy) 30   reserved (memcpy)
//   4             13                      22    reserved (memcpy) 31   reserved
//   5             14                      23    reserved (memcpy) 32
//   6             15                      24                      33
//   7             16                      25                      34
//   8 main        17                      26                      35
//
param pe_count: i16;

param MEMCPYH2D_DATA_1_ID: i16;
param MEMCPYD2H_DATA_1_ID: i16;
param LAUNCH_ID: i16;

const MEMCPYH2D_DATA_1: color = @get_color(MEMCPYH2D_DATA_1_ID);
const MEMCPYD2H_DATA_1: color = @get_color(MEMCPYD2H_DATA_1_ID);
const LAUNCH: color = @get_color(LAUNCH_ID);

const memcpy = @import_module( "<memcpy_multi/get_params>", .{
    .width = pe_count,
    .height = 1
    });

layout {
  // Use a row of 10 PEs to execute this kernel
  @set_rectangle(pe_count, 1);

  for (@range(i16, pe_count)) |pe_x| {

    const memcpy_params = memcpy.get_params(pe_x);

    @set_tile_code(pe_x, 0, "pe_program.csl",  .{
       .memcpy_params = memcpy_params,
       .MEMCPYH2D_DATA_1 = MEMCPYH2D_DATA_1,
       .MEMCPYD2H_DATA_1 = MEMCPYD2H_DATA_1,
       .LAUNCH = LAUNCH
    });

  }
}
