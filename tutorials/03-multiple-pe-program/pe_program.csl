// Not a complete program; the top-level source file is code.csl.

param pe_id: i16;

// Memory whose value we intend to update
var global: i16 = 0;

// Color along which we expect a wavelet
param trigger: color;

param out_color: color;
const dsd = @get_dsd(fabout_dsd, .{.fabric_color = out_color, .extent = 1});

// Task that will be triggered when wavelet arrives
task pe_task() void {
  global = 42 + pe_id;
  @mov16(dsd, global);
}

comptime {
  // Associate the appropriate task with the wavelet's color
  @bind_task(pe_task, trigger);

  // Activate the color to run the task
  @activate(trigger);
}
