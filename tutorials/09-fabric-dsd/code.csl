// Copyright 2022 Cerebras Systems.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

param size: i16;

const main: color = @get_color(0);
const inColor: color = @get_color(1);
const outColor: color = @get_color(2);

const inDsd = @get_dsd(fabin_dsd, .{
  .extent = size,
  .fabric_color = inColor,
});

const outDsd = @get_dsd(fabout_dsd, .{
  .extent = size,
  .fabric_color = outColor,
});

task mainTask() void {
  @add16(outDsd, inDsd, 1);
}

comptime {
  @block(inColor);
  @activate(main);
  @bind_task(mainTask, main);
}

layout {
  @set_rectangle(1, 1);
  @set_tile_code(0, 0, "code.csl", .{ .size = size });

  const inRoute = .{ .rx = .{ WEST }, .tx = .{ RAMP } };
  @set_color_config(0, 0, inColor, .{ .routes = inRoute });

  const outRoute = .{ .rx = .{ RAMP }, .tx = .{ EAST } };
  @set_color_config(0, 0, outColor, .{ .routes = outRoute });
}
