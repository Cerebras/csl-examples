// Copyright 2022 Cerebras Systems.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// resources to route the data between the host and the device.
//

// color map
//
// color  var    color  var              color  var              color  var
//   0 x.c0         9  LAUNCH              18                      27   reserved (memcpy)
//   1 x.c1        10                      19                      28   reserved (memcpy)
//   2 x.c2        11                      20                      29   reserved
//   3 x.c3        12                      21    reserved (memcpy) 30   reserved (memcpy)
//   4 y.c0        13                      22    reserved (memcpy) 31   reserved
//   5 y.c1        14                      23    reserved (memcpy) 32
//   6 y.c2        15  x_color             24                      33
//   7 y.c3        16  y_color             25                      34
//   8             17                      26                      35
//

param Pw: u16;
param Ph: u16;
param chunk_size: u16;

param LAUNCH_ID: i16;

const LAUNCH: color = @get_color(LAUNCH_ID);

const x_color = @get_color(15);
const y_color = @get_color(16);

const c2d = @import_module("<collectives_2d/params>");

const memcpy = @import_module( "<memcpy_multi/get_params>", .{
    .width = Pw,
    .height = Ph
    });

layout {
  @set_rectangle(Pw, Ph);

  var Px: u16 = 0;
  while (Px < Pw) : (Px += 1) {
    var Py: u16 = 0;
    while (Py < Ph) : (Py += 1) {
      const params = c2d.get_params(Px, Py, .{
        .x_colors = .{ @get_color(0), @get_color(1), @get_color(2), @get_color(3) },
        .y_colors = .{ @get_color(4), @get_color(5), @get_color(6), @get_color(7) },
      });
      const memcpy_params = memcpy.get_params(Px);
      @set_tile_code(Px, Py, "code.csl", .{
        .x_color = x_color,
        .y_color = y_color,
        .memcpy_params = memcpy_params,
        .LAUNCH = LAUNCH,
        .c2d_params = params,
        .chunk_size = chunk_size });
    }
  }

  // export symbol name
  @export_name("broadcast_data", [*]u32, true);
  @export_name("scatter_data", [*]u32, true);
  @export_name("broadcast_recv", [*]u32, true);
  @export_name("faddh_result", [*]u32, true);
  @export_name("gather_recv", [*]u32, true);

  @export_name("f_run_x", fn()void);
  @export_name("f_run_y", fn()void);
}
