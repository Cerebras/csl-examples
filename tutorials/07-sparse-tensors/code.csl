var result = [4]i16 { 0, 0, 0, 0 };

const main_color: color = @get_color(0);
const output_color: color = @get_color(1);
const dsd = @get_dsd(fabout_dsd, .{.fabric_color = output_color, .extent = 1});

task main_task(wavelet_data: i16, index: i16) void {
   result[index] = wavelet_data;
   @mov16(dsd, wavelet_data);
}

comptime {
  @bind_task(main_task, main_color);
}

layout {
  @set_rectangle(1, 1);
  @set_tile_code(0, 0, "code.csl");

  const route = .{ .rx = .{ WEST }, .tx = .{ RAMP } };
  @set_color_config(0, 0, main_color, .{ .routes = route });

  // Configure the wavelet route for the output message
  const output_route = .{ .rx = .{ RAMP }, .tx = .{ EAST } };
  @set_color_config(0, 0, output_color, .{ .routes = output_route });
}
